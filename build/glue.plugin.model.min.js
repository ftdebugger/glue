!function(){var plugin=function($,glue){var model=function(){"use strict";var Model=glue.fn.Model=function(config){$.extend(this,config)};glue.fn.createModel=function(constructor){var model=function(config){glue.Model.call(this,config);if(constructor){constructor.call(this,config)}};var f=function(){};f.prototype=Model.prototype;model.prototype=new f;glue.classHelpers(model);return model};glue.fn.toUpperCase=function(name){return name.split("_").map(function(part){return part[0].toUpperCase()+part.slice(1)}).join("")};glue.fn.classHelpers=function(constructor){var prototype=constructor.prototype;constructor.setter=function(name){if(typeof name=="string"){var setter="set"+glue.toUpperCase(name);prototype[setter]=function(value){this[name]=value}}else if(name instanceof Array){name.forEach(constructor.setter,this)}};constructor.getter=function(name){if(typeof name=="string"){var getter="get"+glue.toUpperCase(name);prototype[getter]=function(){return this[name]}}else if(name instanceof Array){name.forEach(constructor.getter,this)}};constructor.accessor=function(name){this.setter(name);this.getter(name)};constructor.extend=function(methods){$.extend(this.prototype,methods)}};return glue.createModel};return model};if(typeof this.define!="undefined"){this.define("glue/model",["jquery","glue"],plugin)}else{plugin(this.jQuery,this.glue)()}}();