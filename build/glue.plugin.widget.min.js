!function(){var plugin=function($,glue){var List=function(){var ListModel=function(){};var f=function(){};f.prototype=Array.prototype;ListModel.prototype=new f;var List=ListModel.prototype;List.destroy=function(){this.forEach(function(view,index){view.destroy();this[index]=undefined},this);this.length=0};List.destroyWidget=function(widget){var found=-1;for(var index=0;index<this.length;index++){if(found>=0){this[found++]=this[index]}else if(this[index]==widget){found=index}}if(found>=0){this.length--}widget.destroy()};List.push=function(widget){[].push.call(this,widget);return widget};List.refresh=function(){for(var index=0;index<this.length;index++){this[index].refresh()}};return ListModel}();var Dict=function(){var DictModel=function(constructor,config){this.dict={};this.removeRest=true;this.constructor=constructor;this.widgetConfig=false;this.autoReorder=false;$.extend(this,config||{})};var Dict=DictModel.prototype;Dict.apply=function(collection,wrapper){if(this.removeRest){var keys=this._keys()}var idCollection=[];collection.forEach(function(model){var modelId=glue.getObjectId(model);idCollection.push(modelId);if(!this.dict[modelId]){this.dict[modelId]=this.factory(model);wrapper.append(this.dict[modelId].render())}else if(this.autoReorder){wrapper.append(this.dict[modelId].render())}},this);if(this.removeRest){keys=this._diff(keys,idCollection);keys.forEach(this.destroyWidget,this)}};Dict._keys=function(){var dict=this.dict;var keys=[];for(var key in dict){if(dict.hasOwnProperty(key)){keys.push(key)}}return keys};Dict._diff=function(array1,array2){var result=[];array1.forEach(function(value){for(var index=0;index<array2.length;index++){if(array2[index]==value){return}}result.push(value)});return result};Dict.factory=function(model,extra){var config=this._getWidgetConfig();extra=extra||{};extra.model=model;$.extend(extra,config);if(typeof this.constructor!="function"){throw new Error("Constructor must be function")}return new this.constructor(extra)};Dict.destroyWidget=function(widgetId){this.dict[widgetId].destroy();delete this.dict[widgetId]};Dict._getWidgetConfig=function(){if(typeof this.widgetConfig=="function"){var config=this.widgetConfig()}else{config=this.widgetConfig}if(typeof config!="object"){config={}}return config};Dict.destroy=function(){this.forEach(function(view){view.destroy()});this.dict={}};Dict.forEach=function(callback,context){if(context){callback=callback.bind(context)}for(var key in this.dict){if(this.dict.hasOwnProperty(key)){callback(this.dict[key])}}};return DictModel}();var widget=function(){var Widget;glue.fn.createWidget=function(constructor){var view=function(config){Widget.call(this,config);if(constructor){constructor.call(this,config)}};var f=function(){};f.prototype=Widget.prototype;view.prototype=new f;view.extend=function(methods){$.extend(view.prototype,methods)};return view};Widget=glue.fn.Widget=function(config){$.extend(this,config||{});this.glue=glue.getInstance();this._widgetLists=[];this._widgetDicts=[];this._widgets=this.widgetList();this._findCache={};this._leaveDom=false};var view=Widget.prototype;view.render=function(){throw new Error("You must implement render method")};view.refresh=function(){};view.destroy=function(){if(!this._leaveDom&&this.dom){this.dom.remove()}if(this.glue){this.glue.destroy()}if(this._widgetLists.length){this._widgetLists.forEach(function(list){list.destroy()})}if(this._widgetDicts.length){this._widgetDicts.forEach(function(list){list.destroy()})}};view._initEvents=function(){};view.leaveDomAfterDestroy=function(){this._leaveDom=true};view.removeDomAfterDestroy=function(){this._leaveDom=false};view.widgetList=function(){var list=new List;this._widgetLists.push(list);return list};view.widgetDict=function(constructor,config){if(typeof constructor!=="function"){throw new Error("Constructor must be function")}var list=new Dict(constructor,config);this._widgetDicts.push(list);return list};view.addWidget=function(widget){this._widgets.push(widget);return widget};view.destroyWidget=function(widget){if(typeof widget=="string"){if(this[widget]){this._widgets.destroyWidget(this[widget]);delete this[widget]}}else{this._widgets.destroyWidget(widget)}};view.getProto=function(){return glue.Widget.prototype};view.observer=function(method,callback,context){if(typeof method=="string"){return this.glue.observer(method,this.model,callback||this.refresh,context||this)}return method.map(function(method){return this.observer(method,callback,context)},this)};view.show=function(){this.dom.show()};view.hide=function(){this.dom.hide()};view.toggle=function(){this.dom.toggle()};view.find=function(selector,ignoreCache){if(ignoreCache){return this.dom.find(selector)}else{if(!this._findCache[selector]){this._findCache[selector]=this.dom.find(selector)}return this._findCache[selector]}};view.filter=function(selector){return this.dom.filter(selector)};view.click=function(selector,callback,context){return this.bind("click",selector,callback,context)};view.bind=function(type,selector,callback,context){var self=this;if(typeof selector=="function"){context=callback;callback=selector;selector=null}if(selector){var dom=this.dom.find(selector)}else{dom=this.dom}dom.bind(type,function(event){event.preventDefault();return callback.call(context?context:self,event)})};view.getTemplate=function(name){return $("#template-"+name).html().trim()};return glue.fn.createWidget}();return widget};if(typeof this.define!="undefined"){this.define("glue/widget",["jquery","glue"],plugin)}else{plugin(this.jQuery,this.glue)}}();